{
    "AWSTemplateFormatVersion":"2010-09-09",
    "Description": "This template creates the Lambda function that creates and deletes the Cassandra service.",
    "Parameters":{
        "ServiceSecurityGroupID": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "The SecurityGroup to access the cluster nodes."
        },
        "SubnetIDs": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "The existing subnet to run Lambda function. This should be the subnet in the VPC where the Cassandra nodes are deployed."
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "Default": "aws-quickstart",
            "Type": "String",
            "ConstraintDescription": "The Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket name for the CloudFormation templates. The CloudFormation template bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-cloudstax-nosql/",
            "Type": "String"
        },
        "S3ObjectLambdaZip": {
            "Type": "String",
            "Default": "functions/packages/ServiceCreation/lambda.zip",
            "AllowedValues": [
                "functions/packages/ServiceCreation/lambda.zip"
            ],
            "Description": "The Cassandra lambda zip object"
        },
        "DeleteVolume": {
            "Type": "String",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Description": "Whether delete Cassandra EBS volumes when deleting the stack"
        },
        "ClusterName":{
            "Type":"String",
            "Description":"The Cluster Name",
            "MinLength": "1",
            "MaxLength": "255",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
            "ConstraintDescription": "Cluster name must start with a letter and can only contain letters, numbers, or hyphens."
        },
        "ServiceName": {
            "Type": "String",
            "Description": "The Cassandra Service Name",
            "MinLength": "1",
            "MaxLength": "255",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
            "ConstraintDescription": "Service name must start with a letter and can only contain letters, numbers, or hyphens."
        },
        "Replicas": {
            "Type": "Number",
            "Default": "3",
            "Description": "Number of replicas"
        },
        "HeapSizeMB": {
            "Type": "Number",
            "Default": "8192",
            "Description": "The Cassandra JVM Heap Size MB"
        },
        "VolumeType": {
            "Type": "String",
            "Default": "gp2",
            "AllowedValues": [
                "gp2",
                "io1",
                "st1"
            ],
            "Description": "The Data volume type"
        },
        "Iops": {
            "Type": "Number",
            "Default": 100,
            "Description": "The iops of the data volume, valid for io1 type volume only."
        },
        "VolumeSizeGB": {
            "Type": "Number",
            "Default": "400",
            "Description": "The Data volume size"
        },
        "EncryptVolume": {
            "Type": "String",
            "Default": "false",
            "AllowedValues": [
                "false",
                "true"
            ],
            "Description": "Whether encrypts the Data volume"
        },
        "JournalVolumeType": {
            "Type": "String",
            "Default": "gp2",
            "AllowedValues": [
                "gp2",
                "io1",
                "st1"
            ],
            "Description": "The Journal volume type"
        },
        "JournalIops": {
            "Type": "Number",
            "Default": 100,
            "Description": "The iops of the journal volume, valid for io1 type volume only."
        },
        "JournalVolumeSizeGB": {
            "Type": "Number",
            "Default": "20",
            "Description": "The Journal volume size"
        },
        "EncryptJournalVolume": {
            "Type": "String",
            "Default": "false",
            "AllowedValues": [
                "false",
                "true"
            ],
            "Description": "Whether encrypts the Journal volume"
        },
        "JmxRemoteUser": {
            "Type": "String",
            "Default": "jmxuser",
            "MaxLength": "255",
            "Description": "The Cassandra JMX Remote User"
        },
        "JmxRemotePassword": {
            "Type": "String",
            "Default": "jmxpassword",
            "NoEcho": "true",
            "MaxLength": "255",
            "Description": "Enter your Cassandra JMX Remote Password",
            "ConstraintDescription": "Input your Cassandra JMX Remote Password"
        }
    },
    "Conditions": {
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        }
    },
    "Resources":{
        "CommonLambdaStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-cloudstax-firecamp/templates/firecamp-lambda-common.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "ClusterName": {
                        "Ref": "ClusterName"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "S3ObjectLambdaZip": {
                        "Ref": "S3ObjectLambdaZip"
                    }
                }
            }
        },
        "VPCDestroyENI": {
            "Type": "Custom::VPCDestroyENI",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "CommonLambdaStack",
                        "Outputs.VPCDestroyENIFunctionArn"
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "ServiceSecurityGroupID"
                    }
                ]
            }
        },

        "LambdaFunction" : {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
                "Code": {
                    "S3Bucket": {
                        "Fn::GetAtt": [
                            "CommonLambdaStack",
                            "Outputs.DestBucket"
                        ]
                    },
                    "S3Key": {
                        "Fn::GetAtt": [
                            "CommonLambdaStack",
                            "Outputs.LambdaDestObject"
                        ]
                    }
                },
                "Runtime" : "python3.6",
                "Role" : {
                    "Fn::GetAtt" : [
                        "CommonLambdaStack",
                        "Outputs.LambdaExecutionRoleArn"
                    ]
                },
                "Timeout" : 300,
                "Handler" : "setup.lambda_handler",
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Ref": "ServiceSecurityGroupID"
                        }
                    ],
                    "SubnetIds": {
                        "Ref": "SubnetIDs"
                    }
                }
            }
        },
        "LambdaFunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "LogGroupName": {
                    "Fn::Join": [
                        "/",
                        [
                            {"Ref": "ClusterName"},
                            "aws/lambda",
                            {"Ref": "LambdaFunction"}
                        ]
                    ]
                },
                "RetentionInDays": 30
            }
        },

        "LambdaCustomResource" : {
            "Type" : "Custom::CassandraLambdaCustomResource",
            "DependsOn": "VPCDestroyENI",
            "Properties" : {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "LambdaFunction",
                        "Arn"
                    ]
                },
                "Region": {
                    "Ref": "AWS::Region"
                },
                "DeleteVolume": {
                    "Ref": "DeleteVolume"
                },
                "Cluster":{
                    "Ref": "ClusterName"
                },
                "ServiceName": {
                    "Ref": "ServiceName"
                },
                "Replicas": {
                    "Ref": "Replicas"
                },
                "HeapSizeMB": {
                    "Ref": "HeapSizeMB"
                },
                "VolumeType": {
                    "Ref": "VolumeType"
                },
                "Iops": {
                    "Ref": "Iops"
                },
                "VolumeSizeGB": {
                    "Ref": "VolumeSizeGB"
                },
                "EncryptVolume": {
                    "Ref": "EncryptVolume"
                },
                "JournalVolumeType": {
                    "Ref": "JournalVolumeType"
                },
                "JournalIops": {
                    "Ref": "JournalIops"
                },
                "JournalVolumeSizeGB": {
                    "Ref": "JournalVolumeSizeGB"
                },
                "EncryptJournalVolume": {
                    "Ref": "EncryptJournalVolume"
                },
                "JmxRemoteUser": {
                    "Ref": "JmxRemoteUser"
                },
                "JmxRemotePassword": {
                    "Ref": "JmxRemotePassword"
                }
            }
        }
    }
}
